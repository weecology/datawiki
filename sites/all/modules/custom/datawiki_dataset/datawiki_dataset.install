<?php

/*
 * Implementation of hook_enable
 */

function datawiki_dataset_enable() {
  $new_content_type = array(
    'type' => 'dataset',
    'name' => 'Dataset',
    'base' => 'node_content',
    'description' => 'New dataset content type for review',
    'custom' => TRUE,
    );
  $new_fields = array(
    'body' => array(
      'name' => 'body',
      'type' => 'text_with_summary',
      'label' => 'Overview',
      'description' => '2-4 sentences summarizing key information about this dataset. Appears in search results.',
      'cardinality' => 1,
      'settings' => array(
        'text_processing' => 1,
        'description_display' => 'before',
        ),
      'widget' => array(
        'settings' => array(
          'rows' => 5,
          'summary_rows' => 2,
          ),
        ),
      'display' => array(
        'default' => array(
          'weight' => 8,
          ),
        ),
      ),
    'taxonomy_vocabulary_group' => array(
      'field_name' => 'taxonomy_vocabulary_group',
      'type' => 'taxonomy_term_reference',
      'label' => 'Taxonomic Group',
      'description' => '',
      'cardinality' => 1,
      'settings' => array(
        'allowed_values' => array(
          0 => array(
            'vocabulary' => 'vocabulary_2',
            'parent' => 0,
            ),
          ),
        'description_display' => 'before',
        ),
      'widget' => array(
        'type' => 'autocomplete_deluxe_taxonomy',
        'module' => 'autocomplete_deluxe',
        'settings' => array(
          'size' => 25,
          ),
        ),
      'display' => array(
        'default' => array(
          'weight' => 2,
          ),
        ),
      ),
    'taxonomy_vocabulary_level' => array(
      'field_name' => 'taxonomy_vocabulary_level',
      'type' => 'taxonomy_term_reference',
      'label' => 'Ecosystem level',
      'description' => '',
      'cardinality' => 1,
      'settings' => array(
        'allowed_values' => array(
          0 => array(
            'vocabulary' => 'vocabulary_6',
            'parent' => 0,
            ),
          ),
        'description_display' => 'before',
        ),
      'widget' => array(
        'type' => 'autocomplete_deluxe_taxonomy',
        'module' => 'autocomplete_deluxe',
        'settings' => array(
          'size' => 25,
          ),
        ),
      'display' => array(
        'default' => array(
          'weight' => 3,
          ),
        ),
      ),
    'taxonomy_vocabulary_scale' => array(
      'field_name' => 'taxonomy_vocabulary_scale',
      'type' => 'taxonomy_term_reference',
      'label' => 'Spatial scale',
      'description' => '',
      'cardinality' => 1,
      'settings' => array(
        'allowed_values' => array(
          0 => array(
            'vocabulary' => 'vocabulary_5',
            'parent' => 0,
            ),
          ),
        'description_display' => 'before',
        ),
      'widget' => array(
        'type' => 'autocomplete_deluxe_taxonomy',
        'module' => 'autocomplete_deluxe',
        'settings' => array(
          'size' => 25,
          ),
        ),
      'display' => array(
        'default' => array(
          'weight' => 4,
          ),
        ),
      ),
    'taxonomy_vocabulary_type' => array(
      'field_name' => 'taxonomy_vocabulary_type',
      'type' => 'taxonomy_term_reference',
      'label' => 'Data type',
      'description' => '',
      'cardinality' => 1,
      'settings' => array(
        'allowed_values' => array(
          0 => array(
            'vocabulary' => 'vocabulary_3',
            'parent' => 0,
            ),
          ),
        'description_display' => 'before',
        ),
      'widget' => array(
        'type' => 'autocomplete_deluxe_taxonomy',
        'module' => 'autocomplete_deluxe',
        'settings' => array(
          'size' => 25,
          ),
        ),
      'display' => array(
        'default' => array(
          'weight' => 5,
          ),
        ),
      ),
    'taxonomy_vocabulary_biome' => array(
      'field_name' => 'taxonomy_vocabulary_biome',
      'type' => 'taxonomy_term_reference',
      'label' => 'Biome',
      'description' => '',
      'cardinality' => 1,
      'settings' => array(
        'allowed_values' => array(
          0 => array(
            'vocabulary' => 'vocabulary_8',
            'parent' => 0,
            ),
          ),
        'description_display' => 'before',
        ),
      'widget' => array(
        'type' => 'autocomplete_deluxe_taxonomy',
        'module' => 'autocomplete_deluxe',
        'settings' => array(
          'size' => 25,
          ),
        ),
      'display' => array(
        'default' => array(
          'weight' => 6,
          ),
        ),
      ),
    'taxonomy_vocabulary_access' => array(
      'field_name' => 'taxonomy_vocabulary_access',
      'type' => 'taxonomy_term_reference',
      'label' => 'Access to data',
      'description' => '',
      'cardinality' => 1,
      'settings' => array(
        'allowed_values' => array(
          0 => array(
            'vocabulary' => 'vocabulary_9',
            'parent' => 0,
            ),
          ),
        'description_display' => 'before',
        ),
      'widget' => array(
        'type' => 'autocomplete_deluxe_taxonomy',
        'module' => 'autocomplete_deluxe',
        'settings' => array(
          'size' => 25,
          ),
        ),
      'display' => array(
        'default' => array(
          'weight' => 7,
          ),
        ),
      ),
    'field_get_data_url' => array(
      'name' => 'field_get_data_url',
      'type' => 'link_field',
      'label' => 'Get Data (URL)',
      'description' => 'URL to request or download these data',
      'cardinality' => -1,
      'settings' => array(
        'title' => 'none',
        'description_display' => 'before',
        ),
      'widget' => array(),
      'display' => array(
        'default' => array(
          'weight' => 11,
          ),
        ),
      ),
    'field_get_data_text' => array(
      'name' => 'field_get_data_text',
      'type' => 'text_long',
      'label' => 'Get Data (text)',
      'description' => 'If no link to download data (above), include instructions on how to obtain data',
      'cardinality' => 1,
      'settings' => array(
        'text_processing' => 1,
        'description_display' => 'before',
        ),
      'widget' => array(),
      'display' => array(
        'default' => array(
          'weight' => 12,
          ),
        ),
      ),
    'field_collection_site' => array(
      'name' => 'field_collection_site',
      'type' => 'text',
      'label' => 'Collection site(s)',
      'description' => 'Collection site location(s)',
      'cardinality' => -1,
      'settings' => array(
        'description_display' => 'before',
        ),
      'widget' => array(),
      'display' => array(
        'default' => array(
          'weight' => 15,
          ),
        ),
      ),
    'field_collection_site_geo' => array(
      'name' => 'field_collection_site_geo',
      'type' => 'geofield',
      'label' => 'Collection site lat/long, if available',
      'description' => '',
      'cardinality' => -1,
      'settings' => array(
        'description_display' => 'before',
        ),
      'widget' => array(
        'type' => 'geofield_latlon',
        ),
      'display' => array(
        'default' => array(
          'weight' => 16,
          ),
        ),
      ),
    'field_image' => array(
      'name' => 'field_image',
      'type' => 'image',
      'label' => 'Image(s)',
      'description' => 'To insert an image into a text field, upload it here, then place the cursor in the text field where you want the image to appear, and click on the "Insert" button.',
      'cardinality' => -1,
      'settings' => array(
        'description_display' => 'before',
        ),
      'widget' => array(
        'settings' => array(
          'insert' => 1,
          'insert_styles' => array(
            'auto' => 'auto',
            'link' => 'link',
            'icon_link' => 'icon_link',
            'image' => 0,
            'image_large' => 0,
            'image_medium' => 0,
            'image_thumbnail' => 0,
            ),
          'insert_default' => 'auto',
          ),
        ),
      'display' => array(
        'default' => array(
          'weight' => 1,
          ),
        ),
      ),
    'field_timespan_date' => array(
      'name' => 'field_timespan_date',
      'type' => 'datetime',
      'label' => 'Collection timespan',
      'description' => 'Years when data were collected',
      'cardinality' => 1,
      'settings' => array(
        'default_value' => 'blank',
        'default_value2' => 'blank',
        'granularity' => array(
          'month' => 0,
          'day' => 0,
          'year' => 'year',
          'hour' => 0,
          'minute' => 0,
          'second' => 0,
          ),
        'todate' => 'optional',
        'description_display' => 'before',
        ),
      'widget' => array(
        'type' => 'date_text',
        'active' => 1,
        'settings' => array(
          'increment' => 1,
          ),
        ),
      'display' => array(
        'default' => array(
          'weight' => 19,
          'settings' => array(
            'fromto' => 'both',
            ),
          ),
        ),
      ),
    'field_time_series_is' => array(
      'name' => 'field_time_series_is',
      'type' => 'list_boolean',
      'label' => 'Is time series',
      'description' => 'Do these data include a time series?',
      'cardinality' => 1,
      'settings' => array(
        'allowed_values' => array(
          0 => 'No',
          1 => 'Includes time series',
          ),
        'description_display' => 'before',
        ),
      'widget' => array(
        'type' => 'options_onoff',
        ),
      'display' => array(
        'default' => array(
          'weight' => 18,
          ),
        ),
      ),
    'field_data_collection_text' => array(
      'name' => 'field_data_collection_text',
      'type' => 'text_long',
      'label' => 'Data collection summary',
      'description' => 'What types of data were collected? How were they collected? Include details on sampling protocol, methods, spatial scales, technologies used, etc.',
      'cardinality' => 1,
      'settings' => array(
        'text_processing' => 1,
        'description_display' => 'before',
        ),
      'widget' => array(),
      'display' => array(
        'default' => array(
          'weight' => 22,
          ),
        ),
      ),
    'field_known_issues_text' => array(
      'name' => 'field_known_issues_text',
      'type' => 'text_long',
      'label' => 'Best practices and known issues',
      'description' => 'What do people need to know when working with these data? E.g. weaknesses, limitations, errors, caveats, tips for separating the wheat from the chaff',
      'cardinality' => 1,
      'settings' => array(
        'text_processing' => 1,
        'description_display' => 'before',
        ),
      'widget' => array(),
      'display' => array(
        'default' => array(
          'weight' => 24,
          ),
        ),
      ),
    'field_conditions_text' => array(
      'name' => 'field_conditions_text',
      'type' => 'text_long',
      'label' => 'Conditions for use',
      'description' => '',
      'cardinality' => 1,
      'settings' => array(
        'text_processing' => 1,
        'description_display' => 'before',
        ),
      'widget' => array(),
      'display' => array(
        'default' => array(
          'weight' => 26,
          ),
        ),
      ),
    'field_citation_text' => array(
      'name' => 'field_citation_text',
      'type' => 'text',
      'label' => 'Citation or Distributing Author',
      'description' => '',
      'cardinality' => 1,
      'settings' => array(
        'text_processing' => 1,
        'description_display' => 'before',
        ),
      'widget' => array(),
      'display' => array(
        'default' => array(
          'weight' => 27,
          ),
        ),
      ),
    'field_license_link' => array(
      'field_name' => 'field_license_link',
      'type' => 'link_field',
      'label' => 'License',
      'description' => 'If the dataset has a license (e.g. GPL or Creative Commons) add license URL and the name of the license to the Title field.',
      'cardinality' => 1,
      'settings' => array(
        'description_display' => 'before',
        ),
      'widget' => array(),
      'display' => array(
        'default' => array(
          'weight' => 28,
          ),
        ),
      ),
    'field_install_code_link' => array(
      'name' => 'field_install_code_text',
      'type' => 'link_field',
      'label' => 'Instructions to install code packages',
      'description' => 'If the dataset or other resources can be obtained by installing a code package, link to that package here',
      'cardinality' => -1,
      'settings' => array(
        'title' => 'none',
        'description_display' => 'before',
        ),
      'widget' => array(),
      'display' => array(
        'default' => array(
          'weight' => 29,
          ),
        ),
      ),
    'field_supplemental_text' => array(
      'name' => 'field_supplemental_text',
      'type' => 'text_long',
      'label' => 'Supplemental resources',
      'description' => '',
      'cardinality' => 1,
      'settings' => array(
        'text_processing' => 1,
        'description_display' => 'before',
        ),
      'widget' => array(),
      'display' => array(
        'default' => array(
          'weight' => 31,
          ),
        ),
      ),
    'field_publications_text' => array(
      'name' => 'field_publications_text',
      'type' => 'text',
      'label' => 'Publications that use these data',
      'description' => '',
      'cardinality' => -1,
      'settings' => array(
        'text_processing' => 1,
        'description_display' => 'before',
        ),
      'widget' => array(),
      'display' => array(
        'default' => array(
          'weight' => 32,
          ),
        ),
      ),
    'field_miscellaneous_text' => array(
      'name' => 'field_miscellaneous_text',
      'type' => 'text',
      'label' => 'Miscellaneous information',
      'description' => '',
      'cardinality' => 1,
      'settings' => array(
        'text_processing' => 1,
        'description_display' => 'before',
        ),
      'widget' => array(),
      'display' => array(
        'default' => array(
          'weight' => 45,
          ),
        ),
      ),
    'upload' => array(
      'name' => 'upload',
      'type' => 'file',
      'label' => 'Attached files',
      'description' => '',
      'cardinality' => -1,
      'settings' => array(
        'file_extensions' => 'txt json csv pdf xls',
        'max_filesize' => '10 MB',
        'description_display' => 'before',
        ),
      'widget' => array(),
      'display' => array(
        'default' => array(
          'weight' => 34,
          ),
        ),
      ),
    ); // end field list

  $new_field_groups = array(
    'group_get' => array(
      'group_name' => 'group_get',
      'identifier' => 'group_get|node|dataset|form',
      'label' => 'Overview & How to Get these Data',
      'format_type' => 'multipage',
      'format_settings' => array(
        'instance_settings' => array(
          'required_fields' => 1,
          ),
        'formatter' => 'closed',
        ),
      'weight' => 4,
      'entity_type' => 'node',
      'bundle' => 'dataset',
      'mode' => 'form',
      'parent_name' => 'group_dataset',
      'children' => array(
        0 => 'body',
        1 => 'group_taxonomy',
        2 => 'field_get_data_url',
        3 => 'field_get_data_text',
        ),
      ),
    'group_use' => array(
      'group_name' => 'group_use',
      'identifier' => 'group_use|node|dataset|form',
      'label' => 'Tips for using these data',
      'format_type' => 'multipage',
      'format_settings' => array(
        'instance_settings' => array(
          'required_fields' => 1,
          'move_button' => 1,
          'move_additional' => 1,
          ),
        'formatter' => 'closed',
        ),
      'weight' => 5,
      'entity_type' => 'node',
      'bundle' => 'dataset',
      'mode' => 'form',
      'parent_name' => 'group_dataset',
      'children' => array(
        0 => 'field_known_issues_text',
        1 => 'field_best_practices_text',
        2 => 'field_conditions_text',
        3 => 'field_citation_text',
        4 => 'field_license_link',
        5 => 'field_install_code_link',
        6 => 'field_supplemental_text',
        7 => 'field_publications_text',
        ),
      ),
    'group_details' => array(
      'group_name' => 'group_details',
      'identifier' => 'group_details|node|dataset|form',
      'label' => 'More specifics about the data',
      'format_type' => 'multipage',
      'format_settings' => array(
        'instance_settings' => array(
          'required_fields' => 1,
          ),
        'formatter' => 'closed',
        ),
      'weight' => 6,
      'entity_type' => 'node',
      'bundle' => 'dataset',
      'mode' => 'form',
      'parent_name' => 'group_dataset',
      'children' => array(
        0 => 'field_georeferenced_is',
        1 => 'field_collection_site_geo',
        2 => 'field_collection_site',
        3 => 'field_timespan_date',
        4 => 'field_time_series_is',
        5 => 'field_data_collection_text',
        6 => 'field_miscellaneous_text',
        7 => 'upload',
        ),
      ),
    'group_dataset' => array(
      'group_name' => 'group_dataset',
      'identifier' => 'group_dataset|node|dataset|form',
      'label' => 'Dataset details',
      'format_type' => 'multipage-group',
      'weight' => 3,
      'entity_type' => 'node',
      'bundle' => 'dataset',
      'mode' => 'form',
      'children' => array(
        0 => 'group_get',
        1 => 'group_use',
        2 => 'group_details',
        ),
      ),
    'group_taxonomy' => array(
      'group_name' => 'group_taxonomy',
      'identifier' => 'group_taxonomy|node|dataset|form',
      'label' => '',
      'format_type' => 'fieldset',
      'format_settings' => array(
        'formatter' => 'open',
        'instance_settings' => array(
          'classes' => 'taxonomy-group',
          'description' => "Tag this dataset with as many relevant keywords as you can find in the categories below. Add a new keyword by typing it into the most appropriate category. Keywords help others use search to quickly find datasets.",
          ),
        ),
      'weight' => 32,
      'entity_type' => 'node',
      'bundle' => 'dataset',
      'mode' => 'form',
      'children' => array(
        0 => 'taxonomy_vocabulary_group',
        1 => 'taxonomy_vocabulary_level',
        2 => 'taxonomy_vocabulary_scale',
        3 => 'taxonomy_vocabulary_type',
        4 => 'taxonomy_vocabulary_biome',
        5 => 'taxonomy_vocabulary_access',
        ),
      ),
    );

  _create_content_type($new_content_type);
  _add_or_update_fields($new_content_type,$new_fields);
  _create_fieldgroups($new_field_groups);
}

function _create_content_type($content_type_definition) {
  $types = node_type_get_types();
  if (!(array_key_exists($content_type_definition['type'], $types))) {
    $content_type = node_type_set_defaults($content_type_definition);
    node_type_save($content_type);
  }
  else {
    dpm ('content type ' . $content_type_definition['type'] . 'exists');
  }
}

function _add_or_update_fields($content_type, $field_definitions) {

  foreach ($field_definitions as $machine_name => $field_info) {

    $field = array(
      'field_name' => $machine_name,
      'type' => $field_info['type'],
      'cardinality' => $field_info['cardinality'],
      'settings' => $field_info['settings'],
    );

    if (!field_info_field($machine_name)) {
      field_create_field($field);
      dpm('created ' . $machine_name);
    }
    else {
      dpm($machine_name . ' already exists!');
      field_update_field($field);
    }

    $bundle = $content_type['type'];

    $instance = array(
        'field_name' => $machine_name,
        'entity_type' => 'node',
        'label' => $field_info['label'],
        'description' => $field_info['description'],
        'bundle' => $bundle,
        'settings' => $field_info['settings'],
        'widget' => $field_info['widget'],
        'display' => $field_info['display'],
      );

    // Create the instance on the bundle if it doesn't exist
    if ((field_info_field($machine_name)) && (!field_info_instance('node',$machine_name,$bundle))) {
        field_create_instance($instance);
        dpm($machine_name . ' added to ' . $instance['bundle']);
      } // if
    else {
      field_update_instance($instance);
      }
    } // foreach

  } // _add_fields

function _create_fieldgroups($groups) {
  foreach ($groups as $new_field_group) {
    $new_field_group_obj = (object) $new_field_group;
    field_group_group_save($new_field_group_obj);
  }
} // _create_fieldgroups

function datawiki_dataset_uninstall() {

  $new_content_type_name = 'dataset';

  // Delete the new content type
  node_type_delete($new_content_type_name);
  dpm('deleted the content type ' . $new_content_type_name);
}
