<?php
// $Id: block_node_visibility.module,v 1.2 2010/04/06 17:12:10 gestaltware Exp $

/**
 * @file
 *  Block Node Visibility enables configuration to show blocks on specific node
 *  types directly on the block edit form.
 */

/**
 * Implementation of hook_form_block_admin_configure_alter().
 */
function block_node_visibility_form_block_admin_configure_alter(&$form, &$form_state) {
  // Get node types.
  $types = node_get_types('names');
  
  // Invoke a callback to get custom types.
  foreach (module_invoke_all('block_node_visibility', 'type') as $module) {
    foreach ($module as $type => $name) {
      $types[$type] = $name;
    }
  }

  // Sort by name.
  asort($types);

  if (!empty($types)) {
    drupal_add_js(drupal_get_path('module', 'block_node_visibility') .'/block_node_visibility.js');

    $form['block_settings']['#weight'] = -100;

    $form['block_node_visibility_settings'] = array(
      '#type'         => 'fieldset',
      '#title'        => t('Node type specific visibility settings'),
      '#collapsible'  => TRUE,
      '#weight'       => -99,
    );

    $form['block_node_visibility_settings']['block_node_visibility_enabled'] = array(
      '#type'         => 'checkbox',
      '#title'        => t('Enable block node visibility'),
      '#options'      => array(t('Disabled'), t('Enabled')),
      '#default_value' => variable_get('block_node_visibility_enabled_' . $form['module']['#value'] . '_' . $form['delta']['#value'], 0),
      '#description'  => t('Show block on specific !node_config. This mode is not compatible with Page specific visibility settings.', array(
                            '!node_config' => l(t('node types'), 'admin/content/types'),
                          )),
    );

    $form['block_node_visibility_settings']['block_node_visibility'] = array(
      '#type'         => 'checkboxes',
      '#options'      => $types,
      '#default_value' => variable_get('block_node_visibility_' . $form['module']['#value'] . '_' . $form['delta']['#value'], array()),
      // Easy selector for jQuery.
      '#prefix'       => '<div id="block_node_visibility_settings">',
      '#suffix'       => '</div>',
    );

    // Easy selector for jQuery.
    $form['page_vis_settings']['#prefix'] = '<div id="page_vis_settings">';
    $form['page_vis_settings']['#suffix'] = '</div>';

    $form['#validate'][] = 'block_node_visibility_validate';
    $form['#submit'][] = 'block_node_visibility_submit';
  }
  else {
    drupal_set_message(t('No node types were found.'), 'error');
  }

  return $form;
}

/**
 * Validation handler for block edit form.
 */
function block_node_visibility_validate($form, &$form_state) {
  if ($form_state['values']['block_node_visibility_enabled']) {
    form_set_value($form['page_vis_settings']['visibility'], 2, $form_state);
    form_set_value($form['page_vis_settings']['pages'], "<?php\n  return module_exists('block_node_visibility') ? block_node_visibility('" . $form_state['values']['module'] . "', '" . $form_state['values']['delta'] . "') : TRUE;\n?" . ">", $form_state);
  }
}

/**
 * Submit handler for block edit form.
 */
function block_node_visibility_submit($form, &$form_state) {
  $block = $form_state['values']['module'] . '_' . $form_state['values']['delta'];
  variable_set('block_node_visibility_enabled_' . $block, $form_state['values']['block_node_visibility_enabled']);

  if ($form_state['values']['block_node_visibility_enabled']) {
    $setting = array_flip($form_state['values']['block_node_visibility']);
    unset($setting[0]);

    variable_set('block_node_visibility_' . $block, array_keys($setting));
  }
  else {
    variable_del('block_node_visibility_' . $block);
  }
}

/**
 * Block visibility callback from block page visibility settings.
 */
function block_node_visibility($module = NULL, $delta = NULL) {
  static $node;

  // If module does not exist or visibility is not enabled, return TRUE.  
  if (!$module || !variable_get('block_node_visibility_enabled_' . $module . '_' . $delta, 0)) {
    return TRUE;
  }

  // Check is setting is enabled for node type.
  $setting = variable_get('block_node_visibility_' . $module . '_' . $delta, array());
  if (!empty($setting)) {
    if (arg(0) == 'node' && (int)arg(1) && !arg(2)) {
      if (!isset($node)) $node = node_load(arg(1));

      if (in_array($node->type, $setting)) {
        return TRUE;
      }
    }
  }

  // Invoke a callback indicating a block will not be shown. Modules may 
  // override the setting by returning TRUE.
  $callback = module_invoke_all('block_node_visibility', 'visibility', $setting, $node);
  if (in_array(TRUE, $callback)) {
    return TRUE;
  }

  return FALSE;
}
